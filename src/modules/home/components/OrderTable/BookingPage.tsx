// import React, { useState } from 'react';
// import { Button } from '@/components/ui/button';
// import { Input } from '@/components/ui/input';
// import { Textarea } from '@/components/ui/textarea';
// import {
//   CalendarIcon,
//   ClockIcon,
//   UserIcon,
//   MailIcon,
//   PhoneIcon,
//   InfoIcon,
// } from 'lucide-react';
// import {
//   Select,
//   SelectItem,
//   SelectContent,
//   SelectTrigger,
//   SelectValue,
// } from '@/components/ui/select';

// // üìå D·ªØ li·ªáu m·∫∑c ƒë·ªãnh
// const initialBookingData = {
//   date: '',
//   time: '',
//   people: 1,
//   name: '',
//   phone: '',
//   email: '',
//   note: '',
//   options: [],
// };

// const BookingPage = () => {
//   const [bookingData, setBookingData] = useState(initialBookingData);
//   const [error, setError] = useState('');

//   // üìå H√†m ki·ªÉm tra h·ª£p l·ªá
//   const validateForm = () => {
//     const { name, phone, email, date, time } = bookingData;
//     const phoneRegex = /^0\d{9}$/;
//     const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

//     if (!name || !phone || !email || !date || !time) {
//       setError('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc.');
//       return false;
//     }

//     if (!phoneRegex.test(phone)) {
//       setError('S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ 10 ch·ªØ s·ªë v√† b·∫Øt ƒë·∫ßu b·∫±ng s·ªë 0.');
//       return false;
//     }

//     if (!emailRegex.test(email)) {
//       setError('Email kh√¥ng h·ª£p l·ªá.');
//       return false;
//     }

//     setError('');
//     return true;
//   };

//   // üìå H√†m x√°c nh·∫≠n
//   const handleConfirm = () => {
//     if (validateForm()) {
//       alert('ƒê·∫∑t b√†n th√†nh c√¥ng!');
//       // G·ª≠i d·ªØ li·ªáu t·ªõi server ho·∫∑c x·ª≠ l√Ω ti·∫øp
//     }
//   };

//   // üìå H√†m hu·ª∑ b·ªè
//   const handleCancel = () => {
//     setBookingData(initialBookingData);
//     setError('');
//   };

//   return (
//     <div className="max-w-3xl mx-auto mt-8 p-6 bg-white rounded-lg shadow">
//       <h2 className="text-2xl font-bold mb-4">SGU Restaurant</h2>
//       <p className="text-sm text-gray-600 mb-2">
//         üìç 273 An D∆∞∆°ng V∆∞∆°ng, Ph∆∞·ªùng 9, Qu·∫≠n 5, Th√†nh ph·ªë H·ªì Ch√≠ Minh
//       </p>
//       <p className="text-orange-600 font-semibold mb-4">üìû 02466645656</p>

//       {error && (
//         <div className="mb-4 text-red-600 font-medium border border-red-300 p-2 rounded">
//           ‚ö† {error}
//         </div>
//       )}

//       <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
//         {/* c√°c input gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc */}
//         {/* ... gi·ªØ nguy√™n c√°c input date, time, people, name, phone, email ... */}
//         <div>
//           <label className="font-medium">Th·ªùi gian d√πng b·ªØa *</label>
//           <div className="flex items-center gap-2">
//             <CalendarIcon className="h-5 w-5" />
//             <Input
//               type="date"
//               value={bookingData.date}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, date: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         <div>
//           <label className="font-medium invisible sm:visible">Th·ªùi gian *</label>
//           <div className="flex items-center gap-2">
//             <ClockIcon className="h-5 w-5" />
//             <Input
//               type="time"
//               value={bookingData.time}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, time: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         <div>
//           <label className="font-medium">S·ªë l∆∞·ª£ng ng∆∞·ªùi *</label>
//           <div className="flex items-center gap-2">
//             <UserIcon className="h-5 w-5" />
//             <Select
//               value={bookingData.people.toString()}
//               onValueChange={(value) =>
//                 setBookingData({ ...bookingData, people: +value })
//               }
//             >
//               <SelectTrigger className="w-full">
//                 <SelectValue placeholder="Ch·ªçn s·ªë ng∆∞·ªùi" />
//               </SelectTrigger>
//               <SelectContent>
//                 {[...Array(20)].map((_, i) => (
//                   <SelectItem key={i} value={(i + 1).toString()}>
//                     {i + 1}
//                   </SelectItem>
//                 ))}
//               </SelectContent>
//             </Select>
//           </div>
//         </div>

//         <div>
//           <label className="font-medium">H·ªç t√™n *</label>
//           <div className="flex items-center gap-2">
//             <InfoIcon className="h-5 w-5" />
//             <Input
//               placeholder="Nh·∫≠p h·ªç t√™n"
//               value={bookingData.name}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, name: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         <div>
//           <label className="font-medium">S·ªë ƒëi·ªán tho·∫°i *</label>
//           <div className="flex items-center gap-2">
//             <PhoneIcon className="h-5 w-5" />
//             <Input
//               placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
//               value={bookingData.phone}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, phone: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         <div>
//           <label className="font-medium">Email *</label>
//           <div className="flex items-center gap-2">
//             <MailIcon className="h-5 w-5" />
//             <Input
//               placeholder="Nh·∫≠p email"
//               value={bookingData.email}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, email: e.target.value })
//               }
//             />
//           </div>
//         </div>
//       </div>

//       <div className="mt-4">
//         <label className="font-medium">Ghi ch√∫</label>
//         <Textarea
//           placeholder="Nh·∫≠p ghi ch√∫"
//           value={bookingData.note}
//           onChange={(e) =>
//             setBookingData({ ...bookingData, note: e.target.value })
//           }
//         />
//       </div>

//       <div className="flex justify-end gap-4 mt-6">
//         <Button variant="ghost" onClick={handleCancel}>
//           Hu·ª∑ b·ªè
//         </Button>
//         <Button className="bg-orange-500 text-white hover:bg-orange-600" onClick={handleConfirm}>
//           X√°c nh·∫≠n
//         </Button>
//       </div>
//     </div>
//   );
// };

// export default BookingPage;

// import React, { useState } from 'react';
// import { Button } from '@/components/ui/button';
// import { Input } from '@/components/ui/input';
// import { Textarea } from '@/components/ui/textarea';
// import {
//   CalendarIcon,
//   ClockIcon,
//   UserIcon,
//   MailIcon,
//   PhoneIcon,
//   InfoIcon,
// } from 'lucide-react';
// import {
//   Select,
//   SelectItem,
//   SelectContent,
//   SelectTrigger,
//   SelectValue,
// } from '@/components/ui/select';

// // üìå D·ªØ li·ªáu m·∫∑c ƒë·ªãnh
// const initialBookingData = {
//   date: '',
//   time: '',
//   people: 1,
//   name: '',
//   phone: '',
//   email: '',
//   note: '',
//   options: [],
// };

// const BookingPage = () => {
//   const [bookingData, setBookingData] = useState(initialBookingData);
//   const [error, setError] = useState('');

//   // üìå H√†m ki·ªÉm tra h·ª£p l·ªá
//   const validateForm = () => {
//     const { name, phone, email, date, time } = bookingData;
//     const phoneRegex = /^0\d{9}$/;
//     const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

//     if (!name || !phone || !email || !date || !time) {
//       setError('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc.');
//       return false;
//     }

//     if (!phoneRegex.test(phone)) {
//       setError('S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ 10 ch·ªØ s·ªë v√† b·∫Øt ƒë·∫ßu b·∫±ng s·ªë 0.');
//       return false;
//     }

//     if (!emailRegex.test(email)) {
//       setError('Email kh√¥ng h·ª£p l·ªá.');
//       return false;
//     }

//     setError('');
//     return true;
//   };

//   // üìå H√†m x√°c nh·∫≠n
//   const handleConfirm = () => {
//     if (validateForm()) {
//       alert('ƒê·∫∑t b√†n th√†nh c√¥ng!');
//     }
//   };

//   // üìå H√†m hu·ª∑ b·ªè
//   const handleCancel = () => {
//     setBookingData(initialBookingData);
//     setError('');
//   };

//   return (
//     <div className="max-w-3xl mx-auto mt-8 px-4 sm:px-6 py-6 bg-white rounded-lg shadow">
//       <h2 className="text-2xl font-bold mb-2 text-center">SGU Restaurant</h2>
//       <p className="text-sm text-gray-600 mb-1 text-center">
//         üìç 273 An D∆∞∆°ng V∆∞∆°ng, Ph∆∞·ªùng 9, Qu·∫≠n 5, TP.HCM
//       </p>
//       <p className="text-orange-600 font-semibold mb-4 text-center">üìû 02466645656</p>

//       {error && (
//         <div className="mb-4 text-red-600 font-medium border border-red-300 p-2 rounded">
//           ‚ö† {error}
//         </div>
//       )}

//       <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
//         {/* Ng√†y */}
//         <div className="flex flex-col">
//           <label className="font-medium mb-1">Ng√†y d√πng b·ªØa *</label>
//           <div className="flex items-center gap-2">
//             <CalendarIcon className="h-5 w-5 shrink-0" />
//             <Input
//               type="date"
//               className="flex-1"
//               value={bookingData.date}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, date: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         {/* Gi·ªù */}
//         <div className="flex flex-col">
//           <label className="font-medium mb-1">Th·ªùi gian *</label>
//           <div className="flex items-center gap-2">
//             <ClockIcon className="h-5 w-5 shrink-0" />
//             <Input
//               type="time"
//               className="flex-1"
//               value={bookingData.time}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, time: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         {/* S·ªë ng∆∞·ªùi */}
//         <div className="flex flex-col">
//           <label className="font-medium mb-1">S·ªë l∆∞·ª£ng ng∆∞·ªùi *</label>
//           <div className="flex items-center gap-2">
//             <UserIcon className="h-5 w-5 shrink-0" />
//             <Select
//               value={bookingData.people.toString()}
//               onValueChange={(value) =>
//                 setBookingData({ ...bookingData, people: +value })
//               }
//             >
//               <SelectTrigger className="w-full">
//                 <SelectValue placeholder="Ch·ªçn s·ªë ng∆∞·ªùi" />
//               </SelectTrigger>
//               <SelectContent>
//                 {[...Array(20)].map((_, i) => (
//                   <SelectItem key={i} value={(i + 1).toString()}>
//                     {i + 1}
//                   </SelectItem>
//                 ))}
//               </SelectContent>
//             </Select>
//           </div>
//         </div>

//         {/* H·ªç t√™n */}
//         <div className="flex flex-col">
//           <label className="font-medium mb-1">H·ªç t√™n *</label>
//           <div className="flex items-center gap-2">
//             <InfoIcon className="h-5 w-5 shrink-0" />
//             <Input
//               placeholder="Nh·∫≠p h·ªç t√™n"
//               className="flex-1"
//               value={bookingData.name}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, name: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         {/* SƒêT */}
//         <div className="flex flex-col">
//           <label className="font-medium mb-1">S·ªë ƒëi·ªán tho·∫°i *</label>
//           <div className="flex items-center gap-2">
//             <PhoneIcon className="h-5 w-5 shrink-0" />
//             <Input
//               placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
//               className="flex-1"
//               value={bookingData.phone}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, phone: e.target.value })
//               }
//             />
//           </div>
//         </div>

//         {/* Email */}
//         <div className="flex flex-col">
//           <label className="font-medium mb-1">Email *</label>
//           <div className="flex items-center gap-2">
//             <MailIcon className="h-5 w-5 shrink-0" />
//             <Input
//               placeholder="Nh·∫≠p email"
//               className="flex-1"
//               value={bookingData.email}
//               onChange={(e) =>
//                 setBookingData({ ...bookingData, email: e.target.value })
//               }
//             />
//           </div>
//         </div>
//       </div>

//       {/* Ghi ch√∫ */}
//       <div className="mt-4">
//         <label className="font-medium mb-1 block">Ghi ch√∫</label>
//         <Textarea
//           placeholder="Nh·∫≠p ghi ch√∫"
//           value={bookingData.note}
//           onChange={(e) =>
//             setBookingData({ ...bookingData, note: e.target.value })
//           }
//         />
//       </div>

//       {/* N√∫t */}
//       <div className="flex flex-col sm:flex-row justify-end gap-4 mt-6">
//         <Button variant="ghost" onClick={handleCancel}>
//           Hu·ª∑ b·ªè
//         </Button>
//         <Button className="bg-orange-500 text-white hover:bg-orange-600" onClick={handleConfirm}>
//           X√°c nh·∫≠n
//         </Button>
//       </div>
//     </div>
//   );
// };

import React, { useState } from 'react';
import { bookings } from './booking';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import {
  CalendarIcon,
  ClockIcon,
  UserIcon,
  MailIcon,
  PhoneIcon,
  InfoIcon,
} from 'lucide-react';
import {
  Select,
  SelectItem,
  SelectContent,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';

const allSlots = [
  '14:45', '15:00', '15:15', '15:30', '15:45', '16:00',
  '16:15', '16:30', '16:45', '17:00', '17:15', '17:30',
  '17:45', '18:00', '18:15', '18:30', '18:45', '19:00',
  '19:15', '19:30', '19:45', '20:00'
];

export const BookingPage: React.FC = () => {
  const today = new Date().toISOString().slice(0, 10); // YYYY-MM-DD
  const [selectedDate, setSelectedDate] = useState(today);
  const [selectedTime, setSelectedTime] = useState<string | null>(null);
  const [bookingData, setBookingData] = useState({
    date: selectedDate,
    time: '',
    people: 1,
    name: '',
    phone: '',
    email: '',
    note: '',
  });

  // T√≠nh c√°c khung gi·ªù tr·ªëng
  const bookedToday = bookings.filter(b => b.date === selectedDate).map(b => b.time);
  const freeSlots = allSlots.filter(slot => !bookedToday.includes(slot));

  const handleSlotClick = (time: string) => {
    setSelectedTime(time);
    setBookingData({ ...bookingData, date: selectedDate, time });
  };

  const handleDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSelectedDate(e.target.value);
    setSelectedTime(null);
  };

  return (
    <div className="max-w-4xl mx-auto mt-8 p-6 bg-white rounded-lg shadow">
      <h2 className="text-2xl font-bold mb-4">SGU Restaurant - ƒê·∫∑t b√†n</h2>
       <p className="text-sm text-gray-600 mb-2">
         üìç 273 An D∆∞∆°ng V∆∞∆°ng, Ph∆∞·ªùng 9, Qu·∫≠n 5, Th√†nh ph·ªë H·ªì Ch√≠ Minh
       </p>
       <p className="text-orange-600 font-semibold mb-4">üìû 02466645656</p>
      <div className="mb-6">
        <label className="font-medium mr-2">Ch·ªçn ng√†y:</label>
        <Input type="date" value={selectedDate} onChange={handleDateChange} />
      </div>

      <div className="grid grid-cols-4 gap-4 mb-8">
        {freeSlots.map(slot => (
          <Button key={slot} variant="outline" onClick={() => handleSlotClick(slot)}>
            {slot}
          </Button>
        ))}
        {freeSlots.length === 0 && <p>H·∫øt ch·ªó tr·ªëng cho ng√†y n√†y.</p>}
      </div>

      {selectedTime && (
        <div className="border-t pt-6">
          <h3 className="text-xl font-semibold mb-4">ƒê·∫∑t b√†n l√∫c {selectedTime} ng√†y {selectedDate}</h3>
          {/* Reuse form from BookingPage */}
          {/* ... ph·∫ßn form gi·ªëng code c≈©, b·ªè ƒëi input date/time v√† set gi√° tr·ªã s·∫µn ... */}

          {/* V√≠ d·ª• ch·ªâ hi·ªÉn th·ªã form r√∫t g·ªçn */}
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div>
              <label className="font-medium">S·ªë l∆∞·ª£ng ng∆∞·ªùi *</label>
              <div className="flex items-center gap-2">
                <UserIcon className="h-5 w-5" />
                <Select
                  value={bookingData.people.toString()}
                  onValueChange={v => setBookingData({ ...bookingData, people: +v })}
                >
                  <SelectTrigger className="w-full">
                    <SelectValue placeholder="Ch·ªçn s·ªë ng∆∞·ªùi" />
                  </SelectTrigger>
                  <SelectContent>
                    {[...Array(20)].map((_, i) => (
                      <SelectItem key={i} value={(i + 1).toString()}>
                        {i + 1}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div>
              <label className="font-medium">H·ªç t√™n *</label>
              <div className="flex items-center gap-2">
                <InfoIcon className="h-5 w-5" />
                <Input
                  placeholder="Nh·∫≠p h·ªç t√™n"
                  value={bookingData.name}
                  onChange={e => setBookingData({ ...bookingData, name: e.target.value })}
                />
              </div>
            </div>

            <div>
              <label className="font-medium">S·ªë ƒëi·ªán tho·∫°i *</label>
              <div className="flex items-center gap-2">
                <PhoneIcon className="h-5 w-5" />
                <Input
                  placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                  value={bookingData.phone}
                  onChange={e => setBookingData({ ...bookingData, phone: e.target.value })}
                />
              </div>
            </div>

            <div>
              <label className="font-medium">Email *</label>
              <div className="flex items-center gap-2">
                <MailIcon className="h-5 w-5" />
                <Input
                  placeholder="Nh·∫≠p email"
                  value={bookingData.email}
                  onChange={e => setBookingData({ ...bookingData, email: e.target.value })}
                />
              </div>
            </div>
          </div>

          <div className="mt-4">
            <label className="font-medium">Ghi ch√∫</label>
            <Textarea
              placeholder="Nh·∫≠p ghi ch√∫"
              value={bookingData.note}
              onChange={e => setBookingData({ ...bookingData, note: e.target.value })}
            />
          </div>

          <div className="flex justify-end gap-4 mt-6">
            <Button variant="ghost" onClick={() => setSelectedTime(null)}>
              Hu·ª∑ b·ªè
            </Button>
            <Button className="bg-orange-500 text-white hover:bg-orange-600">
              X√°c nh·∫≠n
            </Button>
          </div>
        </div>
      )}
    </div>
  );
};


export default BookingPage;
